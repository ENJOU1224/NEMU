name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  compilation-all:
    runs-on: nemu
    continue-on-error: false
    name: Compilation - all configs
    timeout-minutes: 60
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup env
      run: |
        echo "NEMU_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
    - name: Try to compile 
      id: list_configs
      run: |
        bash ./scripts/compilation-test.sh

  basic-xiangshan:
    runs-on: nemu
    continue-on-error: false
    timeout-minutes: 10
    name: Basic - XiangShan
    steps:
      - uses: actions/checkout@v2
      - name: Setup env
        run: |
          echo "NEMU_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "CI_WORKLOADS=/nfs/home/share/ci-workloads/" >> $GITHUB_ENV
      - name: Build NEMU interpreter for XS
        run: |
          make riscv64-xs_defconfig
          make -j
      - name: System - linux-hello-opensbi
        run: |
          ./build/riscv64-nemu-interpreter -b ${CI_WORKLOADS}/linux-hello-opensbi/fw_payload.bin
      - name: H Extension - xvisor
        run: |
          ./build/riscv64-nemu-interpreter -b ${CI_WORKLOADS}/H-extension-tests/xvisor-linux-minimal/payload.bin
      - name: H Extension - KVM
        run: |
          ./build/riscv64-nemu-interpreter -b ${CI_WORKLOADS}/H-extension-tests/kvm

      - name: test cpt taking and restoring using gz format
        run: |
          make riscv64-xs-cpt_defconfig
          make -j
          make -C resource/gcpt_restore
          # take cpt, and put cpt in output_top/test/linux
          bash ./scripts/take_gz.sh
          # restore cpt
          bash ./scripts/restore_gz.sh
          make clean-all
      - name: test cpt taking and restoring using zstd format
        run: |
          make riscv64-xs-cpt_defconfig
          make -j
          make -C resource/gcpt_restore
          # take cpt, and put cpt in output_top/test/linux
          bash ./scripts/take_zstd.sh
          # restore cpt
          bash ./scripts/restore_zstd.sh
          make clean-all

  basic-nutshell:
    runs-on: nemu
    continue-on-error: false
    timeout-minutes: 10
    name: Basic - NutShell
    steps:
      - uses: actions/checkout@v2
      - name: Setup env
        run: |
          echo "NEMU_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "CI_WORKLOADS=/nfs/home/share/ci-workloads/" >> $GITHUB_ENV
      - name: Build NEMU interpreter
        run: |
          make riscv64-nutshell_defconfig
          make -j
      - name: test boot linux
        run: |
          ./build/riscv64-nemu-interpreter -b ${CI_WORKLOADS}/linux-hello/bbl.bin
          make clean-all

  diff-spike-guard:
    # NEMU should report error if RVV agnostic is enabled when comparing against Spike ref; It should crash in the expected way
    runs-on: nemu
    continue-on-error: false
    name: Diff with Spike - Guard
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Setup env
        run: |
          echo "NEMU_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "TEST_HOME=/nfs/home/share/ci-workloads/V-extension-tests" >> $GITHUB_ENV
      - name: Build NEMU with V extension and agnostic
        run: |
          make clean-all
          make riscv64-xs-diff-spike-agnostic_defconfig
          make -j
          set -x
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/hmmer_retro_6200_0.0378585.gz -r $TEST_HOME/v-gcpt.bin -I 2000000 > crash.log  || exit_code=$?
          if [ ${exit_code} -eq 0 ]; then echo "Difftest is broken, it should report error!" exit 1; fi
          match=$(grep "wrong.*=.*ffff" crash.log -c)
          if [ ${match} -eq 0 ]; then echo "Difftest is broken, it should report at least one agnostic related difference!" exit 1; fi
          make clean-all
          set +x

  diff-spike-basic:
    runs-on: nemu
    continue-on-error: false
    name: Diff with Spike - Basic
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Setup env
        run: |
          echo "NEMU_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "CI_WORKLOADS=/nfs/home/share/ci-workloads/" >> $GITHUB_ENV
      - name: Build NEMU interpreter for diff with spike
        run: |
          git submodule update --init ready-to-run
          make riscv64-rvh-diff-spike_defconfig
          make -j
      - name: Run cputest
        run: |
          ./build/riscv64-nemu-interpreter -b -d ./ready-to-run/riscv64-spike-ref-so ${CI_WORKLOADS}/H-extension-tests/xvisor-linux-minimal/payload.bin

  diff-spike-system:
    runs-on: nemu
    continue-on-error: false
    name: Diff with Spike - System
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Setup env
        run: |
          echo "NEMU_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "CI_WORKLOADS=/nfs/home/share/ci-workloads/" >> $GITHUB_ENV
      - name: Run Xvisor with DiffTest
        run: |
          git submodule update --init ready-to-run
          make riscv64-rvh-diff-spike_defconfig
          echo "#define CONFIG_DETERMINISTIC 1" >> ./include/generated/autoconf.h
          make -j
          ./build/riscv64-nemu-interpreter -b -d $TEST_HOME/riscv64-spike-GCBVH-ref-so ${CI_WORKLOADS}/H-extension-tests/xvisor-linux-minimal/payload.bin
          make clean-all
      # - name: Run KVM with DiffTest
      #   run: |
      #     make riscv64-rvh-diff-spike_defconfig
      #     make -j
      #     ./build/riscv64-nemu-interpreter -b -d $TEST_HOME/riscv64-spike-H-ext-so ${CI_WORKLOADS}/H-extension-tests/kvm
      #     make clean-all
  
  diff-spike-checkpoint:
    runs-on: nemu
    continue-on-error: false
    name: Diff with Spike - Checkpoints
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - name: Setup env
        run: |
          echo "NEMU_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "TEST_HOME=/nfs/home/share/ci-workloads/V-extension-tests" >> $GITHUB_ENV
      - name: Run Vector-spec06-checkpoint with Spike DiffTest
        run: |
          make riscv64-xs-diff-spike_defconfig
          make -j
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/hmmer_nph3_1886_0.000268086.gz -r $TEST_HOME/v-gcpt.bin -I 40000000
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/hmmer_retro_6200_0.0378585.gz -r $TEST_HOME/v-gcpt.bin -I 40000000
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/h264ref_sss_88321_0.0346343.gz -r $TEST_HOME/v-gcpt.bin -I 40000000
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/h264ref_foreman.baseline_8028_0.0414445.gz -r $TEST_HOME/v-gcpt.bin -I 40000000
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/h264ref_foreman.main_3027_0.0443573.gz -r $TEST_HOME/v-gcpt.bin -I 40000000
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/libquantum_41028_0.0840681.gz -r $TEST_HOME/v-gcpt.bin -I 40000000
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so --restore $TEST_HOME/bzip2_402_0.00785398.gz -r $TEST_HOME/v-gcpt.bin -I 40000000
          make clean-all
      - name: Run OpenSBI+Linux+Vectorized_h264 with Spike DiffTest
        run: |
          make riscv64-xs-diff-spike_defconfig
          make -j
          ./build/riscv64-nemu-interpreter -b --diff $TEST_HOME/riscv64-spike-GCBVH-ref-so $TEST_HOME/opensbi_rvv_h264ref_sss -I 200000000
          make clean-all
