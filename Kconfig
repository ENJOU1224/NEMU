mainmenu "NEMU Configuration Menu"

choice
  prompt "Base ISA"
  default ISA_riscv32
config ISA_x86
  bool "x86"
config ISA_mips32
  bool "mips32"
config ISA_riscv32
  bool "riscv32"
config ISA_riscv64
  bool "riscv64"
endchoice

config ISA
  string
  default "x86" if ISA_x86
  default "mips32" if ISA_mips32
  default "riscv32" if ISA_riscv32
  default "riscv64" if ISA_riscv64
  default "none"

config ILEN_MIN
  int
  default 1 if ISA_x86
  default 4 if ISA_mips32
  default 4 if ISA_riscv32
  default 2 if ISA_riscv64
  default 1

config ISA64
  depends on ISA_riscv64
  bool
  default y

if ISA_x86
source "src/isa/x86/Kconfig"
endif

if ISA_riscv64
source "src/isa/riscv64/Kconfig"
endif

choice
  prompt "NEMU execution engine"
  default ENGINE_INTERPRETER

config ENGINE_INTERPRETER
  bool "Interpreter"
  help
    Interpreter guest instructions one by one.
endchoice

config ENGINE
  string
  default "interpreter" if ENGINE_INTERPRETER
  default "none"

choice
  prompt "Running mode"
  default MODE_SYSTEM

config MODE_SYSTEM
  bool "System mode"
  help
    Support full-system functionality, including privileged instructions, MMU and devices.

config MODE_USER
  depends on !TARGET_AM
  bool "User mode"
  help
    Only support non-privileged instructions. System calls are forwarded to NEMU or Linux host.
endchoice

choice
  prompt "Build target"
  default TARGET_NATIVE_ELF
config TARGET_NATIVE_ELF
  bool "Executable on Linux Native"
config TARGET_SHARE
  bool "Shared object (used as REF for differential testing)"
config TARGET_AM
  bool "Application on Abstract-Machine"
endchoice

menu "Build Options"
choice
  prompt "Compiler"
  default CC_GCC
config CC_GCC
  bool "gcc"
config CC_GPP
  bool "g++"
config CC_CLANG
  depends on !TARGET_AM
  bool "clang"
endchoice

config CC
  string
  default "gcc" if CC_GCC
  default "g++" if CC_GPP
  default "clang" if CC_CLANG
  default "none"

choice
  prompt "Optimization Level"
  default CC_O2
config CC_O0
  bool "O0"
config CC_O1
  bool "O1"
config CC_O2
  bool "O2"
config CC_O3
  bool "O3"
endchoice

config CC_OPT
  string
  default "-O0" if CC_O0
  default "-O1" if CC_O1
  default "-O2" if CC_O2
  default "-O3" if CC_O3
  default "none"

config CC_LTO
  depends on !TARGET_AM
  bool "Enable link-time optimization"
  default y

config CC_DEBUG
  bool "Enable debug information"
  default n

config CC_ASAN
  depends on !MODE_USER
  bool "Enable address sanitizer"
  default n
endmenu

menu "Testing and Debugging"
config DEBUG
  depends on !TARGET_SHARE
  bool "Enable debug features"
  default n
  help
    Enable debug features, which include instruction tracing and watchpoint.

config DIFFTEST
  depends on !TARGET_SHARE && !TARGET_AM
  bool "Enable differential testing"
  default n
  help
    Enable differential testing with a reference design.
    Note that this will significantly reduce the performance of NEMU.

choice
  prompt "Reference design"
  default DIFFTEST_REF_SPIKE if ISA_riscv64
  default DIFFTEST_REF_KVM if ISA_x86
  default DIFFTEST_REF_QEMU
  depends on DIFFTEST
config DIFFTEST_REF_QEMU
  bool "QEMU, communicate with socket"
if ISA_riscv64
config DIFFTEST_REF_SPIKE
  bool "Spike"
endif
if ISA_x86
config DIFFTEST_REF_KVM
  bool "KVM"
endif
config DIFFTEST_REF_NEMU
  bool "NEMU"
endchoice

config DIFFTEST_REF_PATH
  string
  default "tools/qemu-diff" if DIFFTEST_REF_QEMU
  default "tools/kvm-diff" if DIFFTEST_REF_KVM
  default "tools/spike-diff" if DIFFTEST_REF_SPIKE
  default "." if DIFFTEST_REF_NEMU
  default "none"

config DIFFTEST_REF_NAME
  string
  default "qemu" if DIFFTEST_REF_QEMU
  default "kvm" if DIFFTEST_REF_KVM
  default "spike" if DIFFTEST_REF_SPIKE
  default "nemu-interpreter" if DIFFTEST_REF_NEMU
  default "none"

config DETERMINISTIC
  bool "Make the behavior of NEMU deterministic"
  default n

config IQUEUE
  bool "Record the last instrucitons executed"
  default n
endmenu

if !MODE_USER
source "src/memory/Kconfig"
source "src/device/Kconfig"
endif

choice
  prompt "FPU Emulation"
  default FPU_NONE if TARGET_AM
  default FPU_HOST
config FPU_HOST
  depends on !TARGET_AM
  bool "Use host floating point operation"
config FPU_SOFT
  depends on !TARGET_AM
  bool "Use softfloat library"
config FPU_NONE
  bool "Disable FPU Emulation"
endchoice

choice
  prompt "Detecting misaligned memory accessing"
  default AC_NONE
config AC_HOST
  depends on !TARGET_AM
  bool "By host CPU (x86 host only)"
config AC_SOFT
  bool "By software emulation"
config AC_NONE
  bool "Disable"
endchoice

menu "Miscellaneous"
choice
  depends on !TARGET_AM
  prompt "Host timer"
  default TIMER_GETTIMEOFDAY
config TIMER_GETTIMEOFDAY
  bool "gettimeofday"
config TIMER_CLOCK_GETTIME
  bool "clock_gettime"
endchoice

config RT_CHECK
  bool "Enable runtime checking"
  default y

config PERF_OPT
  depends on !TARGET_AM
  bool "Performance optimization"
  default y

if PERF_OPT
config TCACHE_SIZE
  int "Number of entries in trace cache"
  default 8192

config BB_LIST_SIZE
  int "Number of entries in basic block metadata list"
  default 1024

config BB_POOL_SIZE
  int "Number of entries in basic block metadata pool"
  default 1024

if !DEBUG
config DISABLE_INSTR_CNT
  bool "Disable instruction counting (single step is also disabled)"
  default y
endif
endif

config ENABLE_INSTR_CNT
  bool
  default n if DISABLE_INSTR_CNT
  default y

endmenu
